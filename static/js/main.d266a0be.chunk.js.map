{"version":3,"sources":["components/shared/Menu.tsx","components/shared/Header.tsx","components/home/Home.tsx","data/Desires.ts","data/Fears.ts","data/NPCAppearence.ts","data/Weather.ts","data/Books.ts","data/Desert.ts","utils/RandomUtils.ts","components/random/RandomList.tsx","components/shared/Tile.tsx","components/random/Random.tsx","data/Rules.ts","components/rules/Rules.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","list","width","fullList","Menu","useState","isOpen","setIsOpen","classes","className","MenuSharp","onClick","fontSize","Drawer","open","anchor","onClose","variant","role","List","ListItem","button","ListItemIcon","HomeRounded","ListItemText","to","Gavel","Help","Header","Home","desires","fears","eyes","ears","mouth","chinOrJaw","hair","faceOther","height","body","hands","jewelry","jewelryMaterial","clothes","calmTrait","stressedTrait","currentMood","faith","prejudice","flaws","temperature","wind","precipitation","wildWeather","subject","condition","cover","state","desertRandom","randomItemFromCollection","collection","Math","floor","random","length","rollDice","numOfDice","sizeOfDice","add","multiplier","aggregator","i","getNpcDescription","faceArr","Desc","keepAllArr","trueOrFalseArr","num","newArray","str","indexOf","push","multipleRandomItemsFromCollection","concat","filter","getWeather","arr","Weather","card","minWidth","bullet","display","margin","transform","title","pos","marginBottom","RandomList","Card","CardContent","map","item","key","Tile","props","children","panels","value","Random","undefined","activePanel","setActivePanel","Grid","container","xs","sm","p","Button","color","R","Book","DesertEncounter","stringToPanel","Rules","ruleGroup","rules","ruleTitle","ruleDesc","link","RulesTwo","desc","img","tags","media","search","setSearch","setOpen","ruleData","RuleObj","console","log","rule","matches","forEach","tag","toUpperCase","includes","sort","a","b","alignItems","justify","TextField","label","autoComplete","fullWidth","onChange","e","target","md","lg","xl","CardHeader","subheader","CardMedia","image","Dialog","maxWidth","src","alt","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"maAKMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,KAEXC,SAAU,CACND,MAAO,UAIFE,EAA8B,WAAO,IAAD,EACjBC,oBAAS,GADQ,mBACtCC,EADsC,KAC9BC,EAD8B,KAEvCC,EAAUT,IAEhB,OACI,yBAAKU,UAAU,QACX,kBAACC,EAAA,EAAD,CAAWC,QAAS,kBAAMJ,GAAWD,IAASM,SAAS,UACvD,kBAACC,EAAA,EAAD,CAAQC,KAAMR,EAAQS,OAAO,OAAOC,QAAS,kBAAMT,GAAU,IAAQU,QAAQ,aACzE,yBAAKR,UAAWD,EAAQP,KAAMiB,KAAK,eAAeP,QAAS,kBAAMJ,GAAU,KACvE,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,OAEJ,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,UAGR,kBAACL,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,OAEJ,kBAACF,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,UAAT,WAGR,kBAACL,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,OAEJ,kBAACH,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,WAAT,iBC1CnBG,EAAgC,WACzC,OACI,4BAAQnB,UAAU,cACd,6BACI,kBAAC,EAAD,OAEJ,6BACI,0CAEJ,iCCVCoB,EAA8B,WACvC,OAAO,sCCHEC,EAAU,CACnB,aACA,YACA,OACA,SACA,QACA,WACA,eACA,QACA,oBACA,QACA,UACA,oBACA,yBACA,gBACA,cACA,YChBSC,EAAQ,CACjB,cACA,UACA,OACA,qBACA,cACA,qBACA,qBACA,gBACA,oBACA,iBACA,QACA,OACA,OACA,SACA,SACA,aACA,UACA,WACA,SACA,QACA,UACA,OACA,UACA,UACA,eACA,OACA,eACA,gBACA,SACA,OACA,UACA,WACA,oBACA,WACA,aACA,cACA,OACA,QACA,kBACA,OACA,OACA,YACA,aACA,SACA,WACA,cACA,aACA,eACA,kBCjDSC,EAAO,CAChB,eACA,eACA,eACA,eACA,aACA,gBACA,kBACA,aACA,gBACA,cACA,iBACA,iBACA,aACA,eACA,gCACA,yBACA,aACA,kBACA,cACA,qBAESC,EAAO,CAChB,mBACA,kBACA,cACA,eACA,cACA,eACA,mBACA,uBACA,mBACA,4BACA,oBACA,uCAESC,EAAQ,CACjB,kBACA,kBACA,iBACA,iBACA,eACA,gBACA,mBACA,gBACA,iBACA,oBACA,eACA,oBAESC,EAAY,CACrB,qBACA,gBACA,wBACA,kBACA,mBACA,gBACA,eACA,iBAESC,EAAO,CAChB,cACA,cACA,iBACA,aACA,cACA,aACA,aACA,aACA,cACA,eACA,iCACA,kBACA,eACA,eACA,wBACA,yBACA,gCACA,sBACA,iBACA,mBAESC,EAAY,CACrB,mBACA,uBACA,iBACA,gBACA,iBACA,YACA,sBAESC,EAAS,CAClB,mBACA,oBACA,kBACA,iCACA,6BACA,mBAESC,EAAO,CAChB,qBACA,oBACA,gBACA,uBACA,qBACA,kBACA,kBACA,iBACA,qBACA,mBACA,iBACA,mBACA,mBACA,mBACA,SACA,iBACA,qBACA,QACA,sBACA,oBAESC,EAAQ,CACjB,kBACA,kBACA,eACA,cACA,iBACA,kBAgBSC,EAAU,CACnB,cACA,gBACA,gCACA,gCACA,iCACA,YACA,UACA,iBACA,cACA,eACA,eACA,mBAESC,EAAkB,CAC3B,SACA,UACA,UACA,UACA,QACA,YACA,UACA,yBAESC,EAAU,CACnB,iBACA,uBACA,uBACA,0BACA,gCACA,qBACA,mCACA,sBAESC,EAAY,CACrB,gBACA,WACA,WACA,YACA,eACA,QACA,QACA,YACA,UACA,SACA,YACA,eACA,QACA,UACA,eACA,SACA,SACA,QACA,OACA,aACA,OACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,aACA,QACA,gBACA,eAESC,EAAgB,CACzB,YACA,YACA,YACA,gBACA,aACA,QACA,WACA,cACA,UACA,WACA,gBACA,aACA,oBACA,QACA,WACA,aACA,YACA,WACA,cACA,YACA,QACA,YACA,YACA,WACA,aACA,cACA,cACA,cACA,eACA,cACA,aACA,cAESC,EAAc,CACvB,aACA,YACA,WACA,SACA,YACA,SACA,WACA,UACA,eACA,SACA,WACA,cACA,SACA,aACA,gBACA,YACA,SACA,cACA,UACA,YAESC,EAAQ,CACjB,uBACA,mBACA,oBACA,mBACA,sBACA,kBACA,qBACA,4BAESC,EAAY,CACrB,iBACA,WACA,aACA,WACA,sCACA,iBACA,kBACA,WACA,UACA,cACA,WACA,WACA,UACA,YACA,WACA,WACA,UACA,aACA,YACA,WACA,WACA,QACA,WACA,SACA,WACA,WACA,eACA,aACA,UACA,QACA,eAESC,EAAQ,CACjB,WACA,mBACA,iBACA,gBACA,oBACA,8BACA,2BACA,+BACA,sBACA,yBACA,uBACA,sBACA,mBACA,WACA,4BACA,wBACA,kCACA,8BACA,SACA,2BC1USC,EAAc,CACvB,2BACA,sBACA,sBACA,sBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,sBACA,sBACA,sBACA,4BAGSC,EAAO,CAAC,OAAQ,QAAS,QAAS,WAAY,SAAU,UAExDC,EAAgB,CACzB,OACA,OACA,OACA,qBACA,qBACA,2BAGSC,EAAc,CAAC,MAAO,YAAa,eAAgB,UAAW,aAAc,YAAa,cC5BzFC,EAAU,CACnB,yHACA,wIACA,+GACA,wHACA,qIACA,wHACA,iHACA,kGACA,8FACA,2HACA,gHACA,uGACA,8IACA,iHACA,kFACA,0IACA,iHACA,0IACA,yHACA,sKAESC,EAAY,CACrB,qBACA,0DACA,4EACA,uEACA,2NACA,2FACA,2CACA,gCACA,2EACA,2CAESC,EAAQ,CACjB,+EACA,sCACA,8CACA,aACA,oCACA,sCACA,mCACA,yCACA,wCACA,qCACA,iDACA,mCAESC,EAAQ,CACjB,yDACA,yDACA,iEACA,uDACA,2CACA,qCACA,sDACA,kEACA,4CACA,6CC1DSC,EAAe,CACxB,6BACA,wCACA,gCACA,kBACA,wCACA,mBACA,wDACA,0BACA,4BACA,yBACA,kCACA,+BACA,2BACA,yBACA,0CACA,wBACA,4BACA,iBACA,mBACA,qBACA,8BACA,qDACA,4CACA,+CACA,uDACA,yDACA,iBACA,gCACA,8CACA,2CACA,0CACA,yCACA,mBACA,gDACA,qBACA,+BACA,0BACA,qCACA,wDACA,+DACA,8BACA,qBACA,4BACA,gCACA,6BACA,gCACA,kBACA,yBACA,2BACA,wBACA,0BACA,yBACA,yBACA,0BACA,yCACA,oCACA,+CACA,2BACA,qBACA,gCACA,qBACA,kBACA,oBACA,qBACA,qBACA,uBACA,kBACA,2BACA,oBACA,qBACA,sBACA,sBACA,qBACA,wBACA,oBACA,mBACA,gBACA,sBACA,sBACA,6BACA,yCACA,wCACA,0BACA,aACA,4CACA,gCACA,sBACA,yBChFSC,EAA2B,SAACC,GACrC,OAAOA,EAAWC,KAAKC,MAAMD,KAAKE,SAAWH,EAAWI,UAkB/CC,GAAW,SAACC,EAAmBC,GAExC,IAFiH,IAArDC,EAAoD,uDAAtC,EAAGC,EAAmC,uDAAd,EAC9FC,EAAa,EACRC,EAAI,EAAGA,EAAIL,EAAWK,IAC3BD,GAAcT,KAAKC,MAAMD,KAAKE,SAAWI,GAAc,EAS3D,OAPIE,IACAC,GAAcD,GAGdD,IACAE,GAAcF,GAEXE,GAsBEE,GAAoB,WAC7B,IAAMC,EAAU,CACZ,SAAWd,EAAyBe,GACpC,UAAYf,EAAyBe,GACrC,WAAaf,EAAyBe,GACtC,cAAgBf,EAAyBe,GACzC,UAAYf,EAAyBe,GACrC,UAAYf,EAAyBe,IAGnCC,EAAa,CACf,YAAchB,EAAyBe,GACvC,UAAYf,EAAyBe,GACrC,YAAcf,EAAyBe,GACvC,iBAAmBf,EAAyBe,GAC5C,qBAAuBf,EAAyBe,GAChD,iBAAmBf,EAAyBe,GAC5C,cAAgBf,EAAyBe,GACzC,SAAWf,EAAyBe,GACpC,SAAWf,EAAyB5B,GACpC,WAAa4B,EAAyB7B,IAGpC8C,EAAiB,CACnB,aACIjB,EAAyBe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","file":"static/js/main.d266a0be.chunk.js","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core';\nimport { Gavel, HomeRounded, MenuSharp, Help } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250\n    },\n    fullList: {\n        width: 'auto'\n    }\n});\n\nexport const Menu: FunctionComponent<{}> = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const classes = useStyles();\n\n    return (\n        <div className=\"menu\">\n            <MenuSharp onClick={() => setIsOpen(!isOpen)} fontSize=\"large\" />\n            <Drawer open={isOpen} anchor=\"left\" onClose={() => setIsOpen(false)} variant=\"temporary\">\n                <div className={classes.list} role=\"presentation\" onClick={() => setIsOpen(false)}>\n                    <List>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <HomeRounded />\n                            </ListItemIcon>\n                            <ListItemText>\n                                <Link to=\"/\">Home</Link>\n                            </ListItemText>\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Gavel />\n                            </ListItemIcon>\n                            <ListItemText>\n                                <Link to=\"/rules\">Rules</Link>\n                            </ListItemText>\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Help />\n                            </ListItemIcon>\n                            <ListItemText>\n                                <Link to=\"/random\">Random</Link>\n                            </ListItemText>\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n        </div>\n    );\n};\n","import React, { FunctionComponent } from 'react';\nimport { Menu } from './Menu';\n\nexport const Header: FunctionComponent<{}> = () => {\n    return (\n        <header className=\"App-header\">\n            <nav>\n                <Menu />\n            </nav>\n            <div>\n                <h1>D&D 4Ever</h1>\n            </div>\n            <span />\n        </header>\n    );\n};\n","import React, { FunctionComponent } from 'react';\n\nexport const Home: FunctionComponent<{}> = () => {\n    return <div>Home</div>;\n};\n","export const desires = [\n    'acceptance',\n    'curiosity',\n    'food',\n    'family',\n    'honor',\n    'idealism',\n    'independence',\n    'order',\n    'physical activity',\n    'power',\n    'romance',\n    'saving/collecting',\n    'social contact/friends',\n    'social status',\n    'tranquility',\n    'vengence'\n];\n","export const fears = [\n    'abandonment',\n    'amnesia',\n    'bees',\n    'being a bad person',\n    'being alone',\n    'being electrocuted',\n    'being sterotypical',\n    'being touched',\n    'being underground',\n    'being unwanted',\n    'blood',\n    'bugs',\n    'cats',\n    'change',\n    'clowns',\n    'commitment',\n    'corpses',\n    'crashing',\n    'crowds',\n    'death',\n    'doctors',\n    'dogs',\n    'failure',\n    'falling',\n    'tight spaces',\n    'fire',\n    'getting lost',\n    'getting older',\n    'ghosts',\n    'gods',\n    'weapons',\n    'intimacy',\n    'losing loved ones',\n    'monsters',\n    'old people',\n    'open spaces',\n    'pain',\n    'power',\n    'public speaking',\n    'rain',\n    'rats',\n    'rejection',\n    'slow death',\n    'snakes',\n    'the dark',\n    'the unknown',\n    'themselves',\n    'violence/war',\n    'water drowning'\n];\n","export const eyes = [\n    'Sleepy eyes.',\n    'Shifty eyes.',\n    'Watery eyes.',\n    'Bright eyes.',\n    'Cold eyes.',\n    'Smiling eyes.',\n    'Close-set eyes.',\n    'Wild eyes.',\n    'Distant eyes.',\n    'A lazy eye.',\n    'Piercing eyes.',\n    'Watchful eyes.',\n    'Dark eyes.',\n    'Hooded eyes.',\n    'Eyes of two different colors.',\n    'Slightly crossed eyes.',\n    'Wide eyes.',\n    'Beautiful eyes.',\n    'Beady eyes.',\n    'Penetrating eyes.'\n];\nexport const ears = [\n    'Over-sized ears.',\n    'Long ear lobes.',\n    'Small ears.',\n    'Uneven ears.',\n    'Hairy ears.',\n    'Pointy ears.',\n    'Short ear lobes.',\n    'Ears that stick out.',\n    'Jug-handle ears.',\n    'Elaborately pierced ears.',\n    'Cauliflower ears.',\n    'Ears with improbable tufts of hair.'\n];\nexport const mouth = [\n    'A crooked nose.',\n    'A bulbous nose.',\n    'A narrow nose.',\n    'A button nose.',\n    'A long nose.',\n    'A broad nose.',\n    'An angular nose.',\n    'A round nose.',\n    'A broken nose.',\n    'A hawk-like nose.',\n    'A wide nose.',\n    'A delicate nose.'\n];\nexport const chinOrJaw = [\n    'A pronounced chin.',\n    'A cleft chin.',\n    'A dimple on the chin.',\n    'A rounded chin.',\n    'A sharp jawline.',\n    'A square jaw.',\n    'A round jaw.',\n    'An underbite.'\n];\nexport const hair = [\n    'Thick hair.',\n    'Wispy hair.',\n    'Straight hair.',\n    'Wavy hair.',\n    'Curly hair.',\n    'Wiry hair.',\n    'Oily hair.',\n    'Lush hair.',\n    'Poofy hair.',\n    'Long braids.',\n    'Braids tight against the head.',\n    'Very long hair.',\n    'Greasy hair.',\n    'Unruly hair.',\n    'An unusual hairstyle.',\n    'An outdated hairstyle.',\n    'A high-maintenance hairstyle.',\n    'Short-cropped hair.',\n    'A shaved head.',\n    'No hair at all.'\n];\nexport const faceOther = [\n    'High cheekbones.',\n    'Tight, drawn cheeks.',\n    'Chubby cheeks.',\n    'A large mole.',\n    'A beauty mark.',\n    'Freckles.',\n    'Terrible scarring.'\n];\nexport const height = [\n    'Unusually short.',\n    'Short in stature.',\n    'Average height.',\n    'Slightly above average height.',\n    'Well above average height.',\n    'Unusually tall.'\n];\nexport const body = [\n    'Thin and delicate.',\n    'Of average build.',\n    'Well-muscled.',\n    'Slightly overweight.',\n    'Grotesquely obese.',\n    'Lean and lanky.',\n    'Lithe and lean.',\n    'Thin and wiry.',\n    'Sinewy and strong.',\n    'Flabby and weak.',\n    'Lumpy or bent.',\n    'Thin and flimsy.',\n    'Soft and chubby.',\n    'Thin and petite.',\n    'Pudgy.',\n    'Big and broad.',\n    'Stocky and strong.',\n    'Bony.',\n    'Wide and ponderous.',\n    'Covered in hair.'\n];\nexport const hands = [\n    'Powerful hands.',\n    'Delicate hands.',\n    'Rough hands.',\n    'Soft hands.',\n    'A light touch.',\n    'A heavy touch.'\n];\nexport const accessories = [\n    'A dagger tattoo.',\n    'An arrow tattoo.',\n    'An anchor tattoo.',\n    'A skull tattoo.',\n    'A pair of crossed bones tattoo.',\n    'A snake tattoo.',\n    'A scorpion tattoo.',\n    'A spider web tattoo.',\n    'A heart tattoo.',\n    'A ring of thorns tattoo.',\n    'A mermaid tattoo.',\n    'A dragon tattoo.'\n];\nexport const jewelry = [\n    'An earring.',\n    'Two earrings.',\n    'A small chain about the neck.',\n    'A large chain about the neck.',\n    'A tight choker about the neck.',\n    'A brooch.',\n    'A ring.',\n    'Several rings.',\n    'A bracelet.',\n    'A nose ring.',\n    'A medallion.',\n    'An ornate belt.'\n];\nexport const jewelryMaterial = [\n    'Steel.',\n    'Bronze.',\n    'Pewter.',\n    'Silver.',\n    'Gold.',\n    'Platinum.',\n    'Copper.',\n    'One or more gemstones'\n];\nexport const clothes = [\n    'Crisp and new.',\n    'Fashionable and hip.',\n    'A bit old-fashioned.',\n    'Of the highest quality.',\n    'Faded, but in good condition.',\n    'Faded and patched.',\n    'Torn in places; missing buttons.',\n    'Tattered and worn.'\n];\nexport const calmTrait = [\n    'Compassionate',\n    'Cheerful',\n    'Reserved',\n    'Outspoken',\n    'Uninterested',\n    'Gruff',\n    'Eager',\n    'Deceitful',\n    'Foolish',\n    'Strict',\n    'Agreeable',\n    'Mischeivious',\n    'Angry',\n    'Fearful',\n    'Manipulative',\n    'Devout',\n    'Greedy',\n    'Funny',\n    'Dour',\n    'Fun-Loving',\n    'Lazy',\n    'Driven',\n    'Boastful',\n    'Artistic',\n    'Assertive',\n    'Carefree',\n    'Cautious',\n    'Confident',\n    'Thoughtful',\n    'Loyal',\n    'Sophisticated',\n    'Weak-Willed'\n];\nexport const stressedTrait = [\n    'Withdrawn',\n    'Murderous',\n    'Obsessive',\n    'Authoritarian',\n    'Determined',\n    'Brave',\n    'Spiteful',\n    'Belligerent',\n    'Caustic',\n    'Reckless',\n    'Argumentative',\n    'Gluttonous',\n    'Overly Protective',\n    'Angry',\n    'Cowardly',\n    'Meticulous',\n    'Sarcastic',\n    'Stubborn',\n    'Destructive',\n    'Practical',\n    'Pushy',\n    'Fanatical',\n    'Secretive',\n    'Scornful',\n    'Courageous',\n    'Impractical',\n    'Calculating',\n    'Industrious',\n    'Manipulative',\n    'Destructive',\n    'Compulsive',\n    'Intolerant'\n];\nexport const currentMood = [\n    'Agreeable.',\n    'Carefree.',\n    'Curious.',\n    'Eager.',\n    'Friendly.',\n    'Happy.',\n    'Hopeful.',\n    'Upbeat.',\n    'Indifferent.',\n    'Bored.',\n    'Focused.',\n    'Suspicious.',\n    'Tired.',\n    'Withdrawn.',\n    'Disagreeable.',\n    'Agitated.',\n    'Angry.',\n    'Despondent.',\n    'Gloomy.',\n    'Nervous.'\n];\nexport const faith = [\n    'Quiet true believer.',\n    'Casual observer.',\n    'Critical student.',\n    'Outspoken cynic.',\n    'Open-minded seeker.',\n    'Broken heretic.',\n    'Cautious listener.',\n    'Fanatical true believer.'\n];\nexport const prejudice = [\n    'Other genders.',\n    'children',\n    'teenagers;',\n    'elderly.',\n    'ruling class and authority figures;',\n    'powerful rich;',\n    'destitute poor.',\n    'beggars;',\n    'drunks;',\n    'drug-users.',\n    'farmers;',\n    'artists;',\n    'clergy;',\n    'soldiers;',\n    'fishers;',\n    'harlots;',\n    'miners;',\n    'merchants;',\n    'scholars;',\n    'herders;',\n    'sailors;',\n    'mages',\n    'dwarves;',\n    'elves;',\n    'gnomes;;',\n    'goblins;',\n    'half-breeds;',\n    'halflings;',\n    'humans;',\n    'orcs;',\n    'reptilians.'\n];\nexport const flaws = [\n    'Fidgets.',\n    'Drinks too much.',\n    'Eats too much.',\n    'Swears often.',\n    'Has poor hygiene.',\n    'Can’t resist flirting.',\n    'Can’t stop staring.',\n    'Sweats profusely and easily.',\n    'Is a habitual liar.',\n    'Embellishes the truth.',\n    'Exaggerates details.',\n    'Has a short temper.',\n    'Is melodramatic.',\n    'Gossips.',\n    'Chews with an open mouth.',\n    'Often sniffs audibly.',\n    'Believes what you tell him/her.',\n    'Is skeptical of everything.',\n    'Paces.',\n    'Makes poor eye contact.'\n];\n","export const temperature = [\n    'very cold for the season',\n    'cold for the season',\n    'cold for the season',\n    'cold for the season',\n    'normal for the season',\n    'normal for the season',\n    'normal for the season',\n    'normal for the season',\n    'normal for the season',\n    'normal for the season',\n    'warm for the season',\n    'warm for the season',\n    'warm for the season',\n    'very warm for the season'\n];\n\nexport const wind = ['none', 'light', 'light', 'moderate', 'strong', 'severe'];\n\nexport const precipitation = [\n    'none',\n    'none',\n    'none',\n    'light rain or snow',\n    'heavy rain or snow',\n    'torrential rain or snow'\n];\n\nexport const wildWeather = ['fog', 'acid rain', 'thunderstorm', 'tornado', 'cold front', 'heat wave', 'dust storm'];\n","export const subject = [\n    'Alchemy and potions (d6): 1. healing tonics; 2. metallurgy; 3. pyromancy; 4. poisoncraft; 5. potionmaking; 6. recipes.',\n    'Art and architecture (d6): 1. fortresses and palaces; 2. painting; 3. sketching; 4. sculpture; 5. stonemasonry; 6. temples and tombs.',\n    'Astronomy and astrology (d6): 1. comets; 2. constellations; 3. moon; 4. sun; 5. stars; 6. strange phenomena.',\n    'Beast lore (d6): 1. domestic beasts; 2. habits; 3. handling; 4. husbandry; 5. poisonous beasts; 6. regional bestiary.',\n    'Demonology (d6): 1. conjurings; 2. exorcisms; 3. fiendish bargains; 4. fiendish bestiary; 5. fiendish realms; 6. fiendish symbols.',\n    'Divination (d6): 1. anthropomancy; 2. crystal gazing; 3. oneiromancy; 4. palm reading; 5. tarot cards; 6. tea leaves.',\n    'Healing arts (d6): 1. alchemical remedies; 2. anatomy; 3. herbal remedies; 4. prayers; 5. rituals; 6. surgery.',\n    'Herb lore (d6): 1. healing herbs; 2. mushrooms; 3. poisons; 4. roots; 5. trees; 6. wildflowers.',\n    'History (d6): 1. ancient; 2. cultural; 3. economic; 4. military; 5. political; 6. regional.',\n    \"Languages (d6): 1. ancient; 2. forbidden; 3. exotic; 4. grammar and punctuation; 5. translations; 6. traveler's phrases.\",\n    'Literary fiction (d6): 1. adventure; 2. fairy tales, 3. folk tales, 4. murder mystery; 5. romance; 6. satire.',\n    'Mining and mineralogy (d6): 1. gems; 2. metals; 3. mining sties; 4. strategy; 5. rocks; 6. smithing.',\n    'Music and songs (d6): 1. heroic ballads; 2. love ballads; 3. bawdy tunes; 4. dirges and laments; 5. hymns; 6. works of a celebrated singer.',\n    'Necromancy (d6): 1. animation; 2. corpses; 3. lichdom; 4. spirits and souls; 5. undead bestiary; 6. vampirism.',\n    'Plays (d6): 1. comedy; 2. drama; 3. history; 4. romance; 5. satire; 6. tragedy.',\n    'Poetry and poems (d6): 1. ballads; 2. epic poetry; 3. love poetry; 4. lyric poetry; 5. odes and laments; 6. works of a celebrated poet.',\n    'Prophecies and omens (d6): 1. apocalypse; 2. astronomical events; 3. birds; 4. dreams; 5. visions; 6. weather.',\n    'Theology (d6): 1. afterlife; 2. rituals and practices; 3. religious history; 4. saints and martyrs; 5. sacred symbols; 6. sacred texts.',\n    'True magic (d6): 1. elementalism; 2. enchantment; 3. illusions; 4. summoning; 5. teleportation and travel; 6. warding.',\n    'Travel and trade (d6): 1. ancient ruins; 2. exotic travelogue; 3. economics and taxation; 4. foreign cultures; 5. regional landmarks and terrain; 6. trade routes.'\n];\nexport const condition = [\n    'Worn and tattered.',\n    'Poor. An ink stain obscures a fair amount of the pages.',\n    'Accidentally damaged. Various water damage around the edges but readable.',\n    'Vandalized. It appears that a good dozen pages have been ripped out.',\n    'Deliberately damaged. Towards the middle there is a section hollowed out. In this hiding place, you find (d6): 1. a locket; 2. a knife; 3. a small hammer; 4. a small scroll; 5. a vial of mysterious liquid; 6. a ring.',\n    'Badly damaged. A lot of the ink has run through water damage and it is nearly illegible.',\n    'Ancient. The pages crumble as they turn.',\n    'Strange. The pages are blank?',\n    'Good, but used. There are handwritten notes in the margins of the pages.',\n    'Pristine. You can smell the ink drying.'\n];\nexport const cover = [\n    'Missing. The pages are bound with string woven through holes near the spine.',\n    'Stained leather. Some sign of wear.',\n    'Wooden. The title is carved into the spine.',\n    'Paperback.',\n    'Animal hide. The fur is still on.',\n    'Stone. Iron rings hold it together.',\n    'Cast Iron. Hinges keep it bound.',\n    'Leather with gemstones embedded in it.',\n    'Leather with the title branded on it.',\n    'Leather with gilding on the spine.',\n    'Torn off. Its kept together by a leather belt.',\n    'Tree Bark. Dried vine binds it.'\n];\nexport const state = [\n    \"A standalone volume, the author's only published work.\",\n    \"A standalone volume, the author's only surviving work.\",\n    'A standalone volume, written by a prolific but obscure author.',\n    'A standalone volume, written by a well-known author.',\n    'The sequel to a book by the same author.',\n    'A part of a series with 3-9 books.',\n    'A single volume of a larger work with 4-15 volumes.',\n    'An edition of a regularly published book with multiple authors.',\n    'A collection of works by the same author.',\n    'An anthology of works by several authors.'\n];\n","export const desertRandom = [\n    'A cavern in a canyon wall.',\n    'A cave entrance, hidden by a boulder.',\n    'A hole under a large boulder.',\n    'A large burrow.',\n    'A small cave next to a dry river bed.',\n    'A peculiar tent.',\n    'A stone house sheltered by a canyon, gorge, or bluff.',\n    'Some nomads’ camp.',\n    'An abandoned stone house.',\n    'An abandoned campsite.',\n    'A merchant caravan’s camp.',\n    'An entrance to a rocky cave.',\n    'An old mine in a canyon.',\n    'An active mining camp.',\n    'A village of primitive canyon dwellers.',\n    'A secluded monastery.',\n    'Ruins of an ancient city.',\n    'A temple ruin.',\n    'An ancient tomb.',\n    'An old watchtower.',\n    'An oasis with a fruit tree.',\n    'An oasis with a palm tree and some desert flowers.',\n    'An unusually large, prickly desert plant.',\n    'A pair of prickly plants from the same root.',\n    'A patch of desert flowers in the shade of a boulder.',\n    'A patch of damp sand in the shadow of a large boulder.',\n    'A rocky bluff.',\n    'A boulder shaped like a face.',\n    'A pair of identical boulders, side by side.',\n    'A boulder sitting atop a larger boulder.',\n    'A narrow gorge with a trickle of water.',\n    'A wide canyon with a trickle of water.',\n    'A dry river bed.',\n    'A swiftly flowing, shallow river in a canyon.',\n    'A muddy river bed.',\n    'A ridge of wind-eroded rock.',\n    'A ridge of jagged rock.',\n    'A mostly-buried, ancient monument.',\n    'Twelve large stones, deliberately arranged in a ring.',\n    'A sheer rock wall with patterns of color in the rock layers.',\n    'A buzzard circles overhead.',\n    'A vulture screams.',\n    'A scorpion scuttles away.',\n    'A large beetle scuttles away.',\n    'A toad hops behind a rock.',\n    'A lizard crawls under a rock.',\n    'A jackal barks.',\n    'A snake slithers away.',\n    'A butterfly flutters by.',\n    'A rattlesnake sounds.',\n    'An unusual bird chirps.',\n    'A gentle breeze blows.',\n    'The wind blows harder.',\n    'The wind kicks up dust.',\n    'Small lose stones tumble down a slope.',\n    'A hint of moisture on the ground.',\n    'A prickly plant with brightly colored fruit.',\n    'A strange desert flower.',\n    'A small palm tree.',\n    'Several small prickly plants.',\n    'A poisonous snake.',\n    'A giant spider.',\n    'A giant scorpion.',\n    'A giant centipede.',\n    'A pack of jackals.',\n    'A hungry jackalwere.',\n    'A giant lizard.',\n    'The ghost of a traveler.',\n    'A pair of gnolls.',\n    'A pair of bandits.',\n    'An hobgoblin scout.',\n    'An orkish war band.',\n    'A roc on the wing.',\n    'A wyvern on the wing.',\n    'A strange hermit.',\n    'A lost traveler.',\n    'A poor nomad.',\n    'A suspicious miner.',\n    'A barbarian hunter.',\n    'A mounted barbarian scout.',\n    'A rockslide coming down a canyon wall.',\n    'A boulder rolling down a canyon wall.',\n    'A collapsing sand dune.',\n    'Quicksand.',\n    'Persistent, strong winds kicking up dust.',\n    'A sudden, swirling sandstorm.',\n    'A mirage of a city.',\n    'A mirage of an oasis.'\n];\n","import { rareRace, commonRace } from '../data/Race';\nimport { desires } from '../data/Desires';\nimport { fears } from '../data/Fears';\nimport * as Desc from '../data/NPCAppearence';\nimport * as Weather from '../data/Weather';\nimport * as Book from '../data/Books';\nimport * as DesertEncounter from '../data/Desert';\n\nexport const randomItemFromCollection = (collection: string[]): string => {\n    return collection[Math.floor(Math.random() * collection.length)];\n};\n\nexport const multipleRandomItemsFromCollection = (collection: string[], num: number): string[] => {\n    const newArray: string[] = [];\n    do {\n        const str: string = randomItemFromCollection(collection);\n        if (newArray.indexOf(str) < 0) {\n            newArray.push(str);\n        }\n    } while (newArray.length < num);\n    return newArray;\n};\n\nexport const randomizeEachItemFromCollection = (collection: string[]): string[] => {\n    return collection.filter(str => rollDice(1, 2) === 1);\n};\n\nexport const rollDice = (numOfDice: number, sizeOfDice: number, add: number = 0, multiplier: number = 1): number => {\n    let aggregator = 0;\n    for (let i = 0; i < numOfDice; i++) {\n        aggregator += Math.floor(Math.random() * sizeOfDice) + 1;\n    }\n    if (multiplier) {\n        aggregator *= multiplier;\n    }\n\n    if (add) {\n        aggregator += add;\n    }\n    return aggregator;\n};\n\nexport const getGender = (): string => {\n    const num = rollDice(1, 21);\n    if (num < 11) return 'Male';\n    else if (num < 21) return 'Female';\n    else return 'Mystery';\n};\n\nexport const getRace = (): string => {\n    const typeNum = rollDice(1, 20);\n    if (typeNum > 19) {\n        return randomItemFromCollection(rareRace);\n    } else {\n        return randomItemFromCollection(commonRace);\n    }\n};\n\nexport const getDesire = (): string => randomItemFromCollection(desires);\nexport const getFear = (): string => randomItemFromCollection(fears);\n\nexport const getNpcDescription = (): string[] => {\n    const faceArr = [\n        'Eyes: ' + randomItemFromCollection(Desc.eyes),\n        'Ears : ' + randomItemFromCollection(Desc.ears),\n        'Mouth : ' + randomItemFromCollection(Desc.mouth),\n        'Chin/Jaw : ' + randomItemFromCollection(Desc.chinOrJaw),\n        'Hair : ' + randomItemFromCollection(Desc.hair),\n        'Face : ' + randomItemFromCollection(Desc.faceOther)\n    ];\n\n    const keepAllArr = [\n        'Height : ' + randomItemFromCollection(Desc.height),\n        'Body : ' + randomItemFromCollection(Desc.body),\n        'Clothes: ' + randomItemFromCollection(Desc.clothes),\n        'Calm Emotion: ' + randomItemFromCollection(Desc.calmTrait),\n        'Stressed Emotion: ' + randomItemFromCollection(Desc.stressedTrait),\n        \"Today's mood: \" + randomItemFromCollection(Desc.currentMood),\n        'Prejudice: ' + randomItemFromCollection(Desc.prejudice),\n        'Flaw: ' + randomItemFromCollection(Desc.flaws),\n        'Fear: ' + randomItemFromCollection(fears),\n        'Desire: ' + randomItemFromCollection(desires)\n    ];\n\n    const trueOrFalseArr = [\n        'Jewelry : ' +\n            randomItemFromCollection(Desc.jewelry) +\n            ' made of ' +\n            randomItemFromCollection(Desc.jewelryMaterial),\n        'Faith: ' + randomItemFromCollection(Desc.faith),\n        'Hands : ' + randomItemFromCollection(Desc.hands)\n    ];\n\n    return multipleRandomItemsFromCollection(faceArr, 3)\n        .concat(keepAllArr)\n        .concat(randomizeEachItemFromCollection(trueOrFalseArr));\n};\n\nexport const getWeather = (): string[] => {\n    const arr = [\n        'Temp: ' + randomItemFromCollection(Weather.temperature),\n        'Wind: ' + randomItemFromCollection(Weather.wind),\n        'Precip: ' + randomItemFromCollection(Weather.precipitation)\n    ];\n\n    if (rollDice(1, 20) === 1) {\n        arr.push('Abnormal Weather: ' + randomItemFromCollection(Weather.wildWeather));\n    }\n\n    return arr;\n};\n\nexport const getBook = (): string[] => {\n    return [\n        'The books subject is ' + randomItemFromCollection(Book.subject),\n        'The books condition is ' + randomItemFromCollection(Book.condition),\n        'The books cover is ' + randomItemFromCollection(Book.cover),\n        'The book is ' + randomItemFromCollection(Book.state)\n    ];\n};\n\nexport const getDesertEncounter = (): string[] => {\n    return [randomItemFromCollection(DesertEncounter.desertRandom)];\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../random/Random.css';\nimport { Card, CardContent } from '@material-ui/core';\n\ninterface RandomListProps {\n    list: string[];\n}\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 275\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)'\n    },\n    title: {\n        fontSize: 14\n    },\n    pos: {\n        marginBottom: 12\n    }\n});\n\nexport const RandomList: React.FC<RandomListProps> = ({ list }) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <ul>\n                    {list.map(item => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </CardContent>\n        </Card>\n    );\n};\n","import React from 'react';\n\nexport const Tile: React.FC<{}> = props => {\n    return <div className=\"tileContainer\">{props.children}</div>;\n};\n","import React, { useState } from 'react';\nimport * as R from '../../utils/RandomUtils';\nimport { RandomList } from './RandomList';\nimport { Tile } from '../shared/Tile';\nimport '../shared/Shared.css';\nimport { Button, Grid } from '@material-ui/core';\n\ninterface kvp {\n    key: string;\n    value: string;\n}\n\nconst panels: kvp[] = [\n    {\n        key: 'description',\n        value: 'NPC Description'\n    },\n    {\n        key: 'weather',\n        value: 'Weather'\n    },\n    {\n        key: 'book',\n        value: 'Book'\n    },\n    {\n        key: 'desert',\n        value: 'Desert Encounter'\n    }\n];\n\nexport const Random: React.FC<{}> = () => {\n    const [activePanel, setActivePanel] = useState<JSX.Element | undefined>(undefined);\n\n    const stringToPanel = (str: string): JSX.Element => {\n        switch (str) {\n            case 'description':\n                return <RandomList list={R.getNpcDescription()} />;\n            case 'weather':\n                return <RandomList list={R.getWeather()} />;\n            case 'book':\n                return <RandomList list={R.getBook()} />;\n            case 'desert':\n                return <RandomList list={R.getDesertEncounter()} />;\n            default:\n                return <p>Click a button to generate something random.</p>;\n        }\n    };\n\n    return (\n        <Grid container>\n            <Grid item xs={12} sm={3}>\n                <div className=\"buttonContainer\">\n                    {panels.map(p => {\n                        return (\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => setActivePanel(stringToPanel(p.key))}\n                                key={p.key}\n                            >\n                                {p.value}\n                            </Button>\n                        );\n                    })}\n                </div>\n            </Grid>\n            <Grid item xs={12} sm={9}>\n                <Tile>{activePanel}</Tile>\n            </Grid>\n        </Grid>\n    );\n};\n","import React from 'react';\n\nexport const Rules = [\n    {\n        ruleGroup: 'Money',\n        rules: [\n            {\n                ruleTitle: 'Copper',\n                ruleDesc: '10 copper in a silver/no lower coin'\n            },\n            {\n                ruleTitle: 'Silver',\n                ruleDesc: '10 silver in a gold/10 copper in a silver'\n            },\n            {\n                ruleTitle: 'Gold',\n                ruleDesc: '10 gold in a platinum/10 silver in a gold'\n            },\n            {\n                ruleTitle: 'Platinum',\n                ruleDesc: 'no higher coin/10 gold in a platinum'\n            },\n            {\n                ruleTitle: 'Electrum',\n                ruleDesc: '2 electrum in a gold/5 silver in an electrum'\n            }\n        ]\n    },\n    {\n        ruleGroup: 'Armor',\n        rules: [\n            {\n                ruleTitle: 'Armor Table',\n                ruleDesc: 'light, medium, heavy, shield',\n                link: 'https://666kb.com/i/d65675z8954pmt8k7.png'\n            }\n        ]\n    }\n];\n\nexport const RulesTwo = [\n    {\n        title: 'Money',\n        desc: 'Chart of conversion rates for money',\n        img: 'https://i.pinimg.com/736x/e3/d0/d7/e3d0d701c4044bea1ae3db18e355c595.jpg',\n        tags: ['money', 'gold', 'silver', 'copper', 'electrum', 'platinum', 'chart', 'convert', 'conversaion']\n    },\n    {\n        title: 'Armor',\n        desc: 'Chart of all armor',\n        img: 'https://666kb.com/i/d65675z8954pmt8k7.png',\n        tags: ['armor', 'light', 'medium', 'heavy', 'shield', 'chart']\n    },\n    {\n        title: 'Weapons',\n        desc: 'Chart of all weapons',\n        img: 'https://i.imgur.com/zZV0yGx.png',\n        tags: ['weapons', 'simple', 'melee', 'ranged', 'martial', 'chart']\n    },\n    {\n        title: 'Travel',\n        desc: 'Travel paces per time',\n        img: 'https://thinkdm.files.wordpress.com/2018/11/travel-pace-chart.png?w=568',\n        tags: ['travel', 'time']\n    },\n    {\n        title: 'Gear',\n        desc: 'List of adventuring gear',\n        img: 'https://db4sgowjqfwig.cloudfront.net/campaigns/105191/assets/421030/Adventuring_Gear.png?1423013456',\n        tags: ['gear', 'item', 'shop', 'prices']\n    },\n    {\n        title: 'Artisan Tools',\n        desc: 'List of artisan tools',\n        img: 'https://i.imgur.com/cDOa4wL.png',\n        tags: ['artisan', 'tools', 'prices', 'shop']\n    },\n    {\n        title: 'Food, Drink, Lodging',\n        desc: 'Prices of living expenses',\n        img: 'https://i.pinimg.com/originals/33/d2/98/33d2980b0ad634569a5b826c2aeddf09.png',\n        tags: ['food', 'drink', 'lodging', 'prices']\n    },\n    {\n        title: 'Lifestyle Expenses',\n        desc: 'Cost of living per day per lifestyle',\n        img: 'https://i.pinimg.com/originals/36/0b/f5/360bf5cb8154e4b75cc958f260dccffe.png',\n        tags: ['living', 'cost', 'prices']\n    }\n];\n\n/**\n * {\n        title: '',\n        desc: '',\n        img: '',\n        tags: []\n    }\n */\n","import React, { useState } from 'react';\nimport { Grid, Card, makeStyles, CardHeader, TextField, CardMedia, Dialog } from '@material-ui/core';\nimport * as RuleObj from '../../data/Rules';\nimport '../rules/Rules.css';\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 300,\n        margin: 16\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)'\n    },\n    title: {\n        fontSize: 14\n    },\n    pos: {\n        marginBottom: 12\n    },\n    media: {\n        width: '100%',\n        height: '100px'\n    }\n});\n\nexport const Rules = () => {\n    const [search, setSearch] = useState('');\n    const [open, setOpen] = useState('');\n    const classes = useStyles();\n\n    const handleChange = e => {\n        setSearch(e.target.value);\n    };\n\n    const includesSearch = str => {\n        return str.toUpperCase().includes(search.toUpperCase());\n    };\n\n    let ruleData = RuleObj.RulesTwo;\n\n    console.log('ruleObj', RuleObj.Rules);\n    console.log('ruleData', ruleData);\n\n    ruleData = ruleData.filter(rule => {\n        let matches = false;\n        rule.tags.forEach(tag => {\n            if (search === '' || includesSearch(tag)) {\n                matches = true;\n            }\n        });\n        return matches;\n    });\n\n    ruleData.sort((a, b) => {\n        if (a.title < b.title) {\n            return -1;\n        } else if (a.title > b.title) {\n            return 1;\n        } else {\n            return 0;\n        }\n    });\n\n    return (\n        <>\n            <Grid container alignItems=\"center\" justify=\"center\">\n                <Grid item xs={6}>\n                    <TextField label=\"filter\" autoComplete=\"off\" fullWidth={true} onChange={handleChange} />\n                </Grid>\n            </Grid>\n\n            <Grid container alignItems=\"center\" justify=\"center\">\n                {ruleData.map(rule => {\n                    return (\n                        <div className=\"ruleCard\">\n                            <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\n                                <Card className={classes.card}>\n                                    <CardHeader title={rule.title} subheader={rule.desc} />\n                                    <CardMedia\n                                        title=\"idk\"\n                                        className={classes.media}\n                                        image={rule.img}\n                                        onClick={() => setOpen(rule.img)}\n                                    />\n                                </Card>\n                            </Grid>\n                        </div>\n                    );\n                })}\n            </Grid>\n            <Dialog onClose={() => setOpen('')} open={open !== ''} maxWidth={'lg'}>\n                <img src={open} height=\"100%\" width={'100%'} alt=\"img\" />\n            </Dialog>\n        </>\n    );\n};\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport { Header } from './components/shared/Header';\nimport { Home } from './components/home/Home';\nimport { Random } from './components/random/Random';\nimport { Rules } from './components/rules/Rules';\nimport './App.css';\n\nconst App: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Header />\n            </div>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/random\" component={Random} />\n            <Route path=\"/rules\" component={Rules} />\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}